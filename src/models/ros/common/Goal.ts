import { KPIType } from "./KPI";
import { KPIResultsType } from "./KPIResults";
import { MagnetType } from "./Magnet";

export type GoalType = {
    goalId: string,
    metricGroup?: string,
    metricName?: string,
    customMetricName?: string,
    unitsGroup?: string,
    units?: string,
    kpi: KPIType,
    kpiId: string,
    kpiResults: KPIResultsType,
    nonRecurringResults: KPIResultsType,
    recurringResults: KPIResultsType,
    fromValue?: number,
    toValue?: number,
    currentValue?: number[],
    dateValueChanged?: Date[],
    userThatChanged?: string[],
    reason?: string[],
    dataSource?: string[],
    by?: Date,
    sentence?: string,
    x?: number,
    y?: number,
    favourite?: string,
    priority?: number,
    deleted: boolean,
    postItId?: string,
    magnet: MagnetType,
    useSuffix: boolean,
    chosenSuffix?: string,
    zoneId?: string,
    state?: string,
    fromValue2?: number,
    toValue2?: number,
    progress?: string,
    status: string,
    achieved: boolean,
    linkageStatus: boolean
}

export const Goal = {
    name: "Goal",
    primaryKey: "goalId",
    properties: {
        goalId: "string",
        metricGroup: "string?",
        metricName: "string?",
        customMetricName: "string?",
        unitsGroup: "string?",
        units: "string?",
        kpi: "KPI",
        kpiId: "string",
        kpiResults: "KPIResults",
        nonRecurringResults: "KPIResults",
        recurringResults: "KPIResults",
        fromValue: "float?",
        toValue: "float?",
        currentValue: "float?[]",
        dateValueChanged: "date?[]",
        userThatChanged: "string?[]",
        reason: "string?[]",
        dataSource: "string?[]",
        by: "date?",
        sentence: "string?",
        x: "double?",
        y: "double?",
        favourite: "string?",
        priority: "int?",
        deleted: { type: "bool?", default: false },
        postItId: "string?",
        magnet: "Magnet",
        useSuffix: "bool",
        chosenSuffix: "string?",
        zoneId: "string?",
        state: "string?",
        fromValue2: "double?",
        toValue2: "double?",
        progress: "string?",
        status: { type: "string?" },
        achieved: "bool?",
        linkageStatus: { type: "bool?", default: false }
    }
};
